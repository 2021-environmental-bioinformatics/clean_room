#!/bin/bash

#SBATCH --partition=compute
#SBATCH --job-name=jellyfish.qsub
#SBATCH --mail-type=ALL
#SBATCH --mail-user=anmeyer@whoi.edu
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=180G
#SBATCH --time=24:00:00
#SBATCH --output=jellyfish_%j.log
export OMP_NUM_THREADS=8


for i in $(cat ${1}) #iterate through sample folders to keep results tidy
do
	echo $i #report sample name	
	mkdir /vortexfs1/omics/env-bio/collaboration/clean_room/output/jelly/$i #make directory with sample file name in jelly
	cd /vortexfs1/omics/env-bio/collaboration/clean_room/output/jelly/$i #move to that directory	
	jellyfish count -m 31 -s 100M -t 8  <(zcat /vortexfs1/omics/env-bio/collaboration/clean_room/output/error_corrected/$i/corrected/$i.1.00.0_0.cor.fastq.gz) <(zcat /vortexfs1/omics/env-bio/collaboration/clean_room/output/error_corrected/$i/corrected/$i.2.00.0_0.cor.fastq.gz) -o 'mercounts31.jf' #count kmers using default value of 31, output in binary file. Use 8 threads
	jellyfish count -m 15 -s 100M -t 8  <(zcat /vortexfs1/omics/env-bio/collaboration/clean_room/output/error_corrected/$i/corrected/$i.1.00.0_0.cor.fastq.gz) <(zcat /vortexfs1/omics/env-bio/collaboration/clean_room/output/error_corrected/$i/corrected/$i.2.00.0_0.cor.fastq.gz) -o 'mercounts15.jf' #count kmers using 15 as also specified in source code. Output in binary file
done
